-- Setup Oracle database for Debezium CDC

-- Connect to the PDB
ALTER SESSION SET CONTAINER = ORCLPDB1;

-- Create a tablespace for the Debezium user
CREATE TABLESPACE dbz_data DATAFILE '/opt/oracle/oradata/ORCLCDB/dbz_data01.dbf' SIZE 100M AUTOEXTEND ON;

-- Create the Debezium user - C## prefix is needed for CDB users
CREATE USER C##DBZUSER IDENTIFIED BY dbz
    DEFAULT TABLESPACE dbz_data
    QUOTA UNLIMITED ON dbz_data
    CONTAINER=ALL;

-- Grant necessary privileges to the user
GRANT CREATE SESSION TO C##DBZUSER CONTAINER=ALL;
GRANT CREATE TABLE TO C##DBZUSER CONTAINER=ALL;
GRANT CREATE SEQUENCE TO C##DBZUSER CONTAINER=ALL;
GRANT CREATE TRIGGER TO C##DBZUSER CONTAINER=ALL;
GRANT EXECUTE ON DBMS_LOGMNR TO C##DBZUSER CONTAINER=ALL;
GRANT LOGMINING TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ANY TRANSACTION TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ON V_$DATABASE TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ON V_$LOG TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ON V_$LOGFILE TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ON V_$ARCHIVED_LOG TO C##DBZUSER CONTAINER=ALL;
GRANT SELECT ON GV_$ARCHIVE_CURRENT TO C##DBZUSER CONTAINER=ALL;

-- Enable supplemental logging at the database level
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;

-- Create sample tables
CREATE TABLE CUSTOMERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(255) NOT NULL,
    LAST_NAME VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ORDERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(20) NOT NULL,
    TOTAL NUMBER(10,2) NOT NULL,
    CONSTRAINT FK_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
);

-- Enable supplemental logging for the tables
ALTER TABLE CUSTOMERS ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;
ALTER TABLE ORDERS ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;

-- Insert sample data
INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL) VALUES 
('John', 'Doe', 'john.doe@example.com');
INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL) VALUES 
('Jane', 'Smith', 'jane.smith@example.com');
INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL) VALUES 
('Bob', 'Johnson', 'bob.johnson@example.com');
INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL) VALUES 
('Alice', 'Brown', 'alice.brown@example.com');
INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL) VALUES 
('Charlie', 'Davis', 'charlie.davis@example.com');

INSERT INTO ORDERS (CUSTOMER_ID, STATUS, TOTAL) VALUES 
(1, 'COMPLETED', 99.99);
INSERT INTO ORDERS (CUSTOMER_ID, STATUS, TOTAL) VALUES 
(1, 'PENDING', 15.50);
INSERT INTO ORDERS (CUSTOMER_ID, STATUS, TOTAL) VALUES 
(2, 'CANCELLED', 25.75);
INSERT INTO ORDERS (CUSTOMER_ID, STATUS, TOTAL) VALUES 
(3, 'COMPLETED', 75.25);
INSERT INTO ORDERS (CUSTOMER_ID, STATUS, TOTAL) VALUES 
(4, 'PENDING', 35.50);

COMMIT;
